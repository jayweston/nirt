 #!/usr/bin/perl
use Digest::MD5;
use Digest::SHA1;
package server_responce_command;

#Subroutine to process the command command
sub send_command{

	#get device name and set working directory
	$command = $data;
	$command_spaceless = $command;
	$command_spaceless =~ s/\s/_/g;
	$command_spaceless =~ s/\//-/g;
	$command_spaceless =~ s/\\/-/g;
	$command_spaceless = "commands/$command_spaceless";

	#establish connection
	$reply = server_responce_color::get_color_start()."Please run: $command | $netCat_name $ip_address 1128\n".server_responce_color::get_color_end();
	$client_socket->send($reply);
	secondaryConnection();
	
	#request what to change the device to
	$reply = server_responce_color::get_color_start()."Complete.\n".server_responce_color::get_color_end();
	$client_socket->send($reply);

	#Get hash for MD5
	my $md5_digest = Digest::MD5->new;
	open(my $fh, "$currentDirectory/$command_spaceless") or die "Could not open file '$currentDirectory/$command_spaceless' $!";	
		$md5_digest->addfile( $fh );
	close $fh;
	my $md5 = $md5_digest->hexdigest;

	#Get hashes for SHA1
	my $sha1_digest = Digest::SHA1->new;
	open($fh, "$currentDirectory/$command_spaceless") or die "Could not open file '$currentDirectory/$command_spaceless' $!";
		$sha1_digest->addfile( $fh );
	close $fh;
	my $sha1 = $sha1_digest->hexdigest;

	#Create log entry
	my $currentDateTime = localtime->strftime('%F %T');
	my $filename = $currentDirectory.'/log.txt';
	open($fh, '>>', $filename) or die "Could not open file '$filename' $!";
	say $fh "\nCommand: $command\nAccepted at: $currentDateTime\nMD5: $md5\nSHA1: $sha1\n";
	close $fh;
}

1127;
